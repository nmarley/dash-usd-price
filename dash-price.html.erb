<!DOCTYPE html>
<html id="htmlTop" lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title data-bind="text: page_title"></title>
  <link rel="stylesheet" href="css/main.css">
</head>
<body>

  <div>
    Bitstamp BTC/USD Price: <span id="btc_usd_price" data-bind="text: formattedPrice">0.0</span><br>
    latest update: <span id="bits_ts" data-bind="text: bitsTs">0000-00-00 00:00:00</span>
  </div>

  <hr>

  <div>
    Poloniex BTC/Dash Price: <span id="polo_btc_dash" data-bind="text: polo_btc_dash">0.0</span><br>
    latest update: <span id="polo_btc_dash_ts" data-bind="text: polo_btc_dash_ts">0000-00-00 00:00:00</span>
  </div>

  <hr>

  <div>
    $<span data-bind="text: formattedPrice">0.0</span> * <span data-bind="text: polo_btc_dash">0.0</span> = $<span data-bind="text: dash_usd">0.0</span> USD / Dash<br>
    <small>Value last updated: <span id="lastDashUSDUpdate" data-bind="text: lastDashUSDUpdate">0000-00-00 00:00:00</span></small>
  </div>

<!-- LTC price... who cares? -->
  <hr>

  <div>
    Polo BTC/LTC Price: <span id="polo_btc_ltc" data-bind="text: polo_btc_ltc">0</span><br>
    latest update: <span id="polo_btc_ltc_ts" data-bind="text: polo_btc_ltc_ts">0000-00-00 00:00:00</span>
  </div>

  <hr>

  <div>
    Polo BTC/ETH Price: <span id="polo_btc_eth" data-bind="text: polo_btc_eth">0</span><br>
    latest update: <span id="polo_btc_eth_ts" data-bind="text: polo_btc_eth_ts">0000-00-00 00:00:00</span>
  </div>

</body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.0/jquery.min.js" type="text/javascript"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.4.0/knockout-min.js" type="text/javascript"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.11.1/moment.min.js" type="text/javascript"></script>
<script src="http://js.pusher.com/2.2/pusher.min.js" type="text/javascript"></script>
<script src="https://autobahn.s3.amazonaws.com/autobahnjs/latest/autobahn.min.jgz" type="text/javascript"></script>

<script type="text/javascript">
var getNow = function () {
  var formattedDate = moment().utc().format('YYYY-MM-DD HH:mm:ss UTC');
  return formattedDate;
}

function BitstampViewModel() {
  var self = this;

//  var current_val = parseFloat(jQuery('#btc_usd_price').text());
//  var current_bits_ts = jQuery('#bits_ts').text();
//  var current_polo_btc_dash = jQuery('#polo_btc_dash').text();
//  var current_polo_ts = jQuery('#polo_btc_dash_ts').text();
//  var last_update = jQuery('#lastDashUSDUpdate').text();

  // initialize with '0' values, then let WS update (or poll the JSON APIs, but
  // why? Too much effort)
//  self.price = ko.observable(current_val);
//  self.bitsTs = ko.observable(current_bits_ts);
//  self.polo_btc_dash = ko.observable(current_polo_btc_dash);
//  self.polo_btc_dash_ts = ko.observable(current_polo_ts);
//  self.lastDashUSDUpdate = ko.observable(last_update);

  self.price = ko.observable(0.0);
  self.bitsTs = ko.observable('0000-00-00 00:00:00');
  self.polo_btc_dash = ko.observable(0.0);
  self.polo_btc_dash_ts = ko.observable('0000-00-00 00:00:00');
  self.lastDashUSDUpdate = ko.observable('0000-00-00 00:00:00');

  // LTC
  self.polo_btc_ltc = ko.observable(0.0);
  self.polo_btc_ltc_ts = ko.observable('0000-00-00 00:00:00');

  // ETH
  self.polo_btc_eth = ko.observable(0.0);
  self.polo_btc_eth_ts = ko.observable('0000-00-00 00:00:00');

  self.newPrice = function(price) {
    var now = getNow();

    self.price(price);
    self.bitsTs(now);
    self.lastDashUSDUpdate(now);
    return;
  };

  self.newPolo = function(polo_btc_dash) {
    var now = getNow();
    self.polo_btc_dash(polo_btc_dash);
    self.polo_btc_dash_ts(now);
    self.lastDashUSDUpdate(now);
    return;
  }

  self.newPoloBtcLtc = function(price) {
    var now = getNow();
    // TODO: bind/apply here to refactor this and eth, dash, etc
    self.polo_btc_ltc(price);
    self.polo_btc_ltc_ts(now);
    return;
  }

  self.newPoloBtcEth = function(price) {
    var now = getNow();
    // TODO: bind/apply here to refactor this and eth, dash, etc
    self.polo_btc_eth(price);
    self.polo_btc_eth_ts(now);
    return;
  }

  self.dash_usd = ko.computed(function() {
    return (self.price() * self.polo_btc_dash()).toFixed(2);
  })

  self.page_title = ko.computed(function() {
    return self.dash_usd() + " = Dash/USD Rate";
  })

  self.formattedPrice = ko.computed(function() {
      return self.price().toFixed(2);
  });

  return;
}

$(document).ready(function() {
  var pusher = new Pusher('de504dc5763aeef9ff52');
  var channel = pusher.subscribe('live_trades');
  channel.bind('trade', function(data) {
    console.log('Bitstamp: ' + 'id:' + data.id + ' price: ' + data.price + ' amount: ' + data.amount);
    viewModel.newPrice(data.price);
  });

  var poloniex_ticker_labels = ["currencyPair", "last", "lowestAsk", "highestBid", "percentChange", "baseVolume", "quoteVolume", "isFrozen", "24hrHigh", "24hrLow"];
  poloniex_conn.onopen = function (session) {
    function tickerEvent (args, kwargs) {
      var h = poloniex_ticker_labels.reduce(function(prev, curr, index, arr) {
        prev[arr[index]] = args[index];
        return prev;
      }, {});

      console.log("Poloniex: " + h.currencyPair + " = " + h.last);
      switch (h.currencyPair) {
        case "BTC_DASH":
          viewModel.newPolo(h.last);
          break;
        case "BTC_LTC":
          viewModel.newPoloBtcLtc(h.last);
          break;
        case "BTC_ETH":
          viewModel.newPoloBtcEth(h.last);
          break;
      }
    }
    session.subscribe('ticker', tickerEvent);
  }

  ko.applyBindings(viewModel, document.getElementById('htmlTop'));
});
var viewModel = new BitstampViewModel();
var poloniex_conn = new autobahn.Connection({
  url: "wss://api.poloniex.com",
  realm: "realm1"
});
poloniex_conn.open();
</script>
</html>
